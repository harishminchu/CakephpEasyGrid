<?php
/**
 *
 * PHP 5
 *
 * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
 * Copyright 2005-2012, Cake Software Foundation, Inc. (http://cakefoundation.org)
 *
 * Licensed under The MIT License
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright 2005-2012, Cake Software Foundation, Inc. (http://cakefoundation.org)
 * @link          http://cakephp.org CakePHP(tm) Project
 * @package       Cake.View.Scaffolds
 * @since         CakePHP(tm) v 0.10.0.1076
 * @license       MIT License (http://www.opensource.org/licenses/mit-license.php)
 */
 
?>
<div class="<?php echo 'Controllers';?> index">
 

<table cellpadding="0" cellspacing="0">

<h2>CakephpEasyGrid - Easily edit database rows without a database manager </h2>
<p>This is a simple to use Cakephp scaffolding addition that allows you to add and edit table rows 
without having to go to phpmyadmin using the power of Extjs 4.1. It allows for faster prototyping because you can 
enter and edit rows quickly into your database. CakephpEasyGrid requires no knowledge of Extjs. 
All Extjs grids are automatically generated. Note that all views on this page are generated using Cakephp's scaffolding 
which is not for production but for quick prototypes. I will slowly make updates to this site but I will also push all source to github.

<p><?php echo $this->Html->link('http://www.github.com/ajbeach2/CakephpEasyGrid','http://www.github.com/ajbeach2/CakephpEasyGrid'); ?>

<h4>Demo</h4>
<p>To see a demo, click on one of of the models on the left.  This will take you to the grid scaffold for each model. Invividual cells can be modified in each grid and all grids having paging.  For cells that are foreign keys, there is a drop down box.
In this demo, there are only models and controllers for each database table.  Scaffolding is used 
so there are no views accept those that are used with scaffolding. Note: not all functionality is there for the grids. There is some CRUD
functions, but callbacks need to be implemented to handle validation errors from Cakephp. It also may be slow.
The Extjs front end needs to be refactored and the performance on the backend could be improved with caching.
</p>

<h3>Cakehp Files</h3>
<h4>EasyGridScaffold.php</h4>
<p>This is a subclass of the controller Scaffold class. It contains methods to handle CRUD requests from the Extjs Grid. 
The grid is generated by the 'grid' request AppModel.php This contains all the funtions that each model must have 
in order to be able to send model infromation to the Extjs front end. This will be replaced with a cakephp behavior 
so that AppModel.php doesn't have to be modified grid.ctp This is the view used by the EasyGridSaccfold class. 
Add this to your app/View/Scaffolds/ folder 

<h4>AppModel.php</h4>

<p>This contains all the funtions that each model must have in order to be able to 
send model infromation to the Extjs front end. This will be replaced with a cakephp 
behavior so that AppModel.php doesn't have to be modified.</p>

<h4>grid.ctp</h4>
<p>This is the view used by the EasyGridSaccfold class. Add this to your app/View/Scaffolds/ folder</p>

<h3>Javascript Files</h3>

<h4>exit-add-devjs</h4>
Required for extjs. Should be in /app/webroot/js/

<h4>easyGrid.js</h4>
cotains all the logic for the Extjs Javascript classes

<h4>grid.js</h4>
This file contains the overwritten Ext.grid.panle class that automatically generates editable grids for each model that is passed from cakephp

<h4>models.js</h4>
Containas model definitions and functions related to Extjs Models.

<h3>Installation instructions</h3>
<p>
<ul>
<li>Add AppModel.php to you Model folder or add the functions to your excisting AppModel.php file //need to change this to a behavior instead of in AppModel </li>
<li>Add grid.ctp to your /app/View/Scaffolds folder Add EasyGridScaffold.php to your /app/Controller/ folder </li>
<li>You must add the following to every controller that you want to use scaffolding:
<ul><br>
public $scaffold;<br><br>
protected function _getScaffold(CakeRequest $request){<br>
<ul>return new EasyGridScaffold($this, $request);</ul>
} <br>
</ul>
<li>@todo ext installation as this requires extjs</li>
<li>@todo other js file instatllion</li>
</ul>

<p><h3>Improvments</h3>
<p>@todo: move AppModel functions to a behavior. 
This will make integration easier 
<br>@todo: refactor front end improve performance 
<br>@todo: improve backend performace. All the model information 
that is used by the front end should be cached on the server, 
instead of querying every time a /grid page is loaded

<p><h3>Source code</h3>
<p>http://www.github.com/ajbeach2/CakephpEasyGrid



</table>
</div>
<div class="actions">
	<h3><?php echo __d('cake', 'Models'); ?></h3>
	<ul>
<?php
		foreach ($models as $model) {				
		echo "<li>" . $this->Html->link($model,array('controller' => Inflector::underscore(Inflector::pluralize($model)), 'action' => 'grid')). "</li>";	
	}
?>
	</ul>
</div>

